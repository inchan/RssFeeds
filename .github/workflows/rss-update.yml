name: RSS Feed Updater

on:
  push:
    branches: [ "master" ]
  schedule:
    - cron: '0 */2 * * *'  # 2시간마다 실행
  workflow_dispatch:       # 수동 실행 옵션

jobs:
  update-and-commit:
    runs-on: macos-latest
    
    steps:
    - name: 리포지토리 체크아웃
      uses: actions/checkout@v3

    - name: RSS 업데이트 실행
      run: swift run

    - name: README.md 업데이트 (XML 파일 목록 및 빌드 시간)
      run: |
        echo "# RSS Feed List" > README.md
        echo "" >> README.md
        echo "이 저장소는 RSS 피드를 자동으로 업데이트하고 관리합니다." >> README.md
        echo "" >> README.md
        echo "## RSS Feeds" >> README.md
        echo "" >> README.md
        
        # Feeds 디렉터리에서 XML 파일 리스트업 (GitHub Pages URL)
        BASE_URL="https://inchan.github.io/RssFeeds"
        for file in Feeds/*.xml; do
          echo "- [$(basename "$file")](${BASE_URL}/$file)" >> README.md
        done
        
        # 마지막 빌드 시간 추가
        echo "" >> README.md
        echo "## 마지막 빌드 시간" >> README.md
        echo "\`$(date "+%Y-%m-%d %H:%M:%S")\`" >> README.md
        
        cat README.md

    - name: publish 브랜치로 README.md 및 변경된 파일 푸시
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
        # publish 브랜치 체크아웃 (없으면 생성)
        if git show-ref --verify --quiet refs/heads/publish; then
          git checkout publish
          git pull origin publish  # 리모트 변경 사항 가져오기
        else
          git checkout --orphan publish
          git rm -rf .
        fi
        
        # Feeds 제외하고 루트의 변경 파일만 스테이징
        git add .  # 모든 파일 추가
        git reset Feeds/*  # Feeds/ 디렉터리는 제외

        if [ -n "$(git diff --cached)" ]; then
          git commit -m "🤖 RSS Feed 및 README.md 업데이트 (자동 커밋)"
          git push origin publish
        else
          echo "변경 사항 없음"
        fi
