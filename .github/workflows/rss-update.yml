name: RSS Feed Updater

on:
  push:
    branches: [ "master" ]
  schedule:
    - cron: '0 7-23/2 * * *'  # 7시부터 23시까지 2시간마다 실행
  workflow_dispatch:  # 수동 실행 옵션

jobs:
  update-and-commit:
    runs-on: macos-latest
    
    steps:
    - name: 리포지토리 체크아웃
      uses: actions/checkout@v3

    - name: RSS 업데이트 실행
      run: swift run

    - name: README.md 및 XML 파일 업데이트
      run: |
        echo "# [RSS Feed List](https://inchan.github.io/RssFeeds/)" > README.md
        echo "" >> README.md
        echo "이 저장소는 RSS 피드를 자동으로 업데이트하고 관리합니다." >> README.md
        echo "" >> README.md
        echo "## RSS Feeds" >> README.md
        echo "" >> README.md
        
        BASE_URL="https://inchan.github.io/RssFeeds"
        for file in Feeds/*.xml; do
          filename=$(basename "$file")
          echo "- [$filename](${BASE_URL}/$filename)" >> README.md
        done
        
        echo "" >> README.md
        echo "## 마지막 빌드 시간" >> README.md
        echo "\`$(date "+%Y-%m-%d %H:%M:%S")\`" >> README.md
        cat README.md

    - name: publish 브랜치에 파일 업데이트 및 푸시
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

        # publish 브랜치 체크아웃 (없으면 생성)
        if git show-ref --verify --quiet refs/heads/publish; then
          git checkout publish
        else
          git checkout -b publish
        fi
        
        # .git 디렉터리를 제외하고 모든 파일 삭제
        find . -mindepth 1 -not -name '.git' -exec rm -rf {} +
        
        # Feeds 디렉터리에서 .xml 및 .md 파일 복사
        cp Feeds/*.xml . 2>/dev/null || true
        cp Feeds/*.md . 2>/dev/null || true
        
        # 스테이징 및 커밋
        git add *.xml *.md
        if git diff --cached --quiet; then
          echo "변경 사항 없음"
        else
          git commit -m "🤖 RSS Feed 및 README.md 업데이트 (자동 커밋)"
          git push origin publish --force
        fi
